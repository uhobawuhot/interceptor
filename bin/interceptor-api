#!/usr/bin/env python

# vim: tabstop=4 shiftwidth=4 softtabstop=4

#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.

"""
Interceptor Engine Server.  This does the work of actually implementing the API
calls made by the user.  Normal communications is done via the interceptor API
which then calls into this engine.
"""

import eventlet
eventlet.monkey_patch()

import os
import sys

# If ../interceptor/__init__.py exists, add ../ to Python search path, so that
# it will override what happens to be installed in /usr/(local/)lib/python...
POSSIBLE_TOPDIR = os.path.normpath(os.path.join(os.path.abspath(sys.argv[0]),
                                   os.pardir,
                                   os.pardir))
if os.path.exists(os.path.join(POSSIBLE_TOPDIR, 'interceptor', '__init__.py')):
    sys.path.insert(0, POSSIBLE_TOPDIR)

from wsgiref import simple_server

from oslo.config import cfg

from interceptor.common import config
from interceptor.openstack.common import log as logging
from interceptor.api import app


if __name__ == '__main__':
    config.parse_args()
    logging.setup('interceptor')
    root = app.Application()
    host, port = cfg.CONF.api.host, cfg.CONF.api.port
    server = simple_server.make_server(host, port, root)
    server.serve_forever()
